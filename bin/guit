#!/usr/bin/env node

require('babel-core/register');
require('babel-polyfill');
var fs = require('fs');
var path = require('path');
var GUIT = require('../lib/guit');
var commander = require('commander');
var config = {};

var DIR = process.cwd();
var GUITRC = path.join(DIR, '.guitrc');
var PACKAGE = path.join(DIR, 'package.json');

if (fs.existsSync(GUITRC)) {
    var rcConfig = JSON.parse(fs.readFileSync(GUITRC, 'utf8'));
    if (rcConfig) {
        config.specDir = rcConfig.specDir;
        config.specFiles = rcConfig.specFiles;
        config.helperDir = rcConfig.helperDir;
        config.helperFiles = rcConfig.helperFiles;
        config.junitFilename = rcConfig.junitFilename;
        config.uiPort = rcConfig.uiPort ;
    }
}

if (fs.existsSync(PACKAGE)) {
    var packageConfig = require(PACKAGE);
    if (packageConfig.guit) {
        config.specDir = packageConfig.guit.specDir || config.specDir;
        config.specFiles = packageConfig.guit.specFiles || config.specFiles;
        config.helperDir = packageConfig.guit.helperDir || rcConfig.helperDir;
        config.helperFiles = packageConfig.guit.helperFiles || rcConfig.helperFiles;
        config.junitFilename = packageConfig.guit.junitFilename || config.junitFilename;
        config.uiPort  = packageConfig.guit.uiPort || config.uiPort;
    }
}

commander
    .option('--spec-dir <dir>', 'Specify spec\'s dir to find')
    .option('--spec-files <regex>', 'Specify spec\'s file regex to run')
    .option('--helper-dir <dir>', 'Specify helper\'s dir to find')
    .option('--helper-files <regex>', 'Specify helper\'s file regex to import')
    .option('--junit-filename <file>', 'Specify junit results file to save')
    .option('--ui-port <port>', 'Specify port to open UI in browser')
    .option('--record', 'Open UI in browser for record specs')
    .parse(process.argv);

config.specDir = commander.specDir || config.specDir;
config.specFiles = commander.specFiles || config.specFiles || '.*';
config.helperDir = commander.helperDir || config.helperDir;
config.helperFiles = commander.helperFiles || config.helperFiles || '.*';
config.junitFilename = commander.junitFilename || config.junitFilename;
config.uiPort = commander.uiPort || config.uiPort;

if (config.helperDir) {
    GUIT.importHelpers({
        helperDir: config.helperDir,
        helperFiles: config.helperFiles
    });
}

if (config.specDir) {
    GUIT.importSpecs({
        specDir: config.specDir,
        specFiles: config.specFiles
    });
}

GUIT.configure({ report: { junitFilename: config.junitFilename } });
GUIT.addReporter(GUIT.TerminalReporter);
GUIT.addReporter(GUIT.JunitReporter);
GUIT.addReporter(GUIT.BrowserReporter);

if (config.uiPort) {
    GUIT.runUI(config.uiPort || 3000);
} else {
    GUIT.runSpecs();
}
