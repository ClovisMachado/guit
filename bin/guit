#!/usr/bin/env node

require('babel-core/register');
require('babel-polyfill');
var fs = require('fs');
var path = require('path');
var GUIT = require('../lib/guit');
var commander = require('commander');
var config = {};

var DIR = process.cwd();
var GUITRC = path.join(DIR, '.guitrc');
var PACKAGE = path.join(DIR, 'package.json');

if (fs.existsSync(GUITRC)) {
    var rcConfig = JSON.parse(fs.readFileSync(GUITRC, 'utf8'));
    if (rcConfig) {
        config.specDir = rcConfig.specDir;
        config.specFiles = rcConfig.specFiles;
        config.junitFilename = rcConfig.junitFilename;
    }
}

if (fs.existsSync(PACKAGE)) {
    var packageConfig = require(PACKAGE);
    if (packageConfig.guit) {
        config.specDir = packageConfig.guit.specDir || config.specDir;
        config.specFiles = packageConfig.guit.specFiles || config.specFiles;
        config.junitFilename = packageConfig.guit.junitFilename || config.junitFilename;
    }
}

commander
    .option('--spec-dir <dir>', 'Specify spec\'s dir to find')
    .option('--spec-files <regex>', 'Specify spec\'s file regex to run')
    .option('--junit-filename <file>', 'Specify junit results file to save')
    .parse(process.argv);

config.specDir = commander.specDir || config.specDir;
config.specFiles = commander.specFiles || config.specFiles || '.*';
config.junitFilename = commander.junitFilename || config.junitFilename;
if (!config.specDir) {
    throw new Error('Spec Dir is not specified');
}

GUIT.importSpecs({
    specDir: config.specDir,
    specFiles: config.specFiles
});

GUIT.configure({ report: { junitFilename: config.junitFilename } });

GUIT.addReporter(GUIT.TerminalReporter);
GUIT.addReporter(GUIT.JunitReporter);
GUIT.runSpecs();
